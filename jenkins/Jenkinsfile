podTemplate(cloud: 'kubernetes',
        containers: [
                containerTemplate(
                        name: 'node14', image: 'node:14.15.4', ttyEnabled: true, workingDir: env.WORKSPACE
                ),
                containerTemplate(
                        name: 'docker', image: 'trion/jenkins-docker-client', ttyEnabled: true, workingDir: env.WORKSPACE
                )
        ],
        volumes: [
                hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock')
        ]
) {
    node(POD_LABEL){
        def utils = null
        environment {

            CI = 'true'
        }

        stage('Checkout scm') {
            echo "Checking out scm..."
            checkout(scm)
            sh "ls -l ${env.WORKSPACE}/jenkins/"

            utils = load env.WORKSPACE +'/jenkins/Utils.groovy'
            def PREV_COMMIT_ID = utils.getPreviousBuildCommitId()
            echo "CommitId of prev build: ${PREV_COMMIT_ID}"

            def CURRENT_COMMIT_ID = utils.storeCurrentCommitId()
            echo "CommitId of current build: ${CURRENT_COMMIT_ID}"

            currentBuild.result = 'NOT_BUILT'
            error('Stopping earlyâ€¦')
        }

        stage('NPM install'){
            container('node14') {
                sh 'npm ci'
                sh "chmod +x -R ${env.WORKSPACE}"
            }
        }

        stage('Test') {
            container('node14') {
                try {
                    sh "./jenkins/scripts/start.sh"
                    sh "npm test"
                }catch(e){
                    throw e
                } finally {
                    sh "./jenkins/scripts/kill.sh"
                }
            }
        }

        stage('Docker build'){
            container('docker'){
                    sh 'docker build -t nexus-docker-dev.veks.site/api-testing:latest .'
            }
        }

        stage('Deploy to docker dev registry'){
            container('docker') {
                withCredentials([usernamePassword(credentialsId: 'jenkins-cicd',
                        passwordVariable: 'docker_password',
                        usernameVariable: 'docker_user')]
                ) {
                    sh "docker login -u ${docker_user} -p ${docker_password} nexus-docker-dev.veks.site"
                    sh "docker push nexus-docker-dev.veks.site/api-testing:latest"
                }
            }
        }

        stage('Trigger QA'){
            build wait: false, job: 'api-testing-QA'
        }

    }
}